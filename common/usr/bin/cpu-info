#!/bin/bash
# Copyright (c) 2021 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0


# START, READ_CPU_INFO_ENTER, READING_CPUINFO, END_READ_CPUINFO,READ_OTHERS, END

STATE="START"
STATE="READ_CPU_INFO_ENTER"

DEVICE_ID=$1
SET_ID=$2

printf "{ \"device_id\" : \"%s\","  ${DEVICE_ID}
printf " \"set_id\" : \"%s\","  "${SET_ID}"
printf " \"info_type\" : \"cpuinfo\","
printf " \"cpuinfo\": {"

STATE="START_READING_CPUINFO"

cat "/proc/cpuinfo" | while read line
do
  KEYS=$(echo $line | cut -d ':' -f 0 )
  VALUE=$(echo $line | cut -d ':' -f 2 )

  if [ "$STATE" == "CHECK_CPUINFO" ];
  then
     if [ "$KEYS" == "Hardware " ]; then
        printf "}}\n"
        STATE="END_READ_CPUINFO"
     else
        printf "}}\n"
        STATE="START_READING_CPUINFO"
        printf "{ \"device_id\" : \"%s\","  ${DEVICE_ID}
        printf " \"set_id\" : \"%s\","  "${SET_ID}"
        printf " \"info_type\" : \"cpuinfo\","
        printf " \"cpuinfo\": {"
     fi
  elif [ "$STATE" == "READING_CPUINFO" ] ;then
     if [ -n "$KEYS" ]; then
        printf ","
     fi
  elif [ "$STATE" == "START_READING_CPUINFO" ]; then
    STATE=READING_CPUINFO
  elif [ "$STATE" == "END_OTHERS" ]; then
    printf "}}\n"
    printf "{ \"device_id\" : \"%s\","  ${DEVICE_ID}
    printf " \"set_id\" : \"%s\","  "${SET_ID}"
    printf " \"info_type\" : \"cpuinfo\","
    printf " \"cpuinfo\": {"
    STATE="READ_OTHERS"
  fi

  case "$STATE" in
  "START_READING_CPUINFO")
    if [ -n "$KEYS" ]; then
       printf "\"%s\": \"%s\"" "$KEYS" "$VALUE"
       STATE="READING_CPUINFO"
    else
       STATE="CHECK_CPUINFO"
    fi
     ;;
  "READING_CPUINFO")
    if [ -n "$KEYS" ]; then
       printf "\"%s\": \"%s\"" "$KEYS" "$VALUE"
    else
       STATE="CHECK_CPUINFO"
    fi
    ;;
  "END_READ_CPUINFO")
      printf "{ \"device_id\" : \"%s\","  ${DEVICE_ID}
      printf " \"set_id\" : \"%s\","  "${SET_ID}"
      printf " \"info_type\" : \"cpuinfo\","
      printf " \"cpuinfo\": {"
      printf "\"%s\": \"%s\", " "$KEYS" "$VALUE"
      STATE="READ_OTHERS"
    ;;
  "READ_OTHERS")
    printf "\"%s\": \"%s\"" "$KEYS" "$VALUE"
    STATE="END_OTHERS";
    ;;
  *)
    echo "invalid state \"$state\""
    ;;
  esac
done
printf "}}\n"
